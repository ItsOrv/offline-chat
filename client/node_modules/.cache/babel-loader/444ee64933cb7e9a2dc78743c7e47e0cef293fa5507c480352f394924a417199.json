{"ast":null,"code":"var _jsxFileName = \"/home/orv/Documents/Projects/offline/offline/client/src/pages/PrivateChat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { useAuth } from '../context/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { SOCKET_URL } from '../config';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PrivateChat = () => {\n  _s();\n  const {\n    userId\n  } = useParams();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [recipientUser, setRecipientUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n\n  // Scroll to the bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Initialize socket connection and fetch messages\n  useEffect(() => {\n    if (!user || !userId) return;\n    socketRef.current = io(SOCKET_URL);\n\n    // Connect user\n    socketRef.current.emit('user_connected', user.id);\n\n    // Fetch user info and messages\n    const fetchData = async () => {\n      try {\n        setError('');\n        // Fetch recipient user info using the chat route\n        const userResponse = await axios.get(`/api/users/chat/${userId}`);\n        if (userResponse.data.success) {\n          setRecipientUser(userResponse.data.user);\n\n          // Fetch messages between current user and recipient\n          const messagesResponse = await axios.get(`/api/messages/private/${userId}`);\n          if (messagesResponse.data.success) {\n            // Sort messages by creation time (oldest first)\n            const sortedMessages = messagesResponse.data.messages.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt));\n            setMessages(sortedMessages);\n          }\n        } else {\n          setError('User not found');\n        }\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error fetching data:', error);\n        setError('Error loading data. ' + (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || ''));\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n\n    // Cleanup socket connection\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [userId, user]);\n\n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socketRef.current || !user || !userId) return;\n\n    // Listen for private messages\n    socketRef.current.on('receive_private_message', message => {\n      var _message$sender, _message$sender2, _message$recipient, _message$recipient2;\n      console.log('Received private message:', message);\n\n      // Normalize message format to handle different ID formats\n      const normalizedMessage = {\n        ...message,\n        sender: {\n          id: ((_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.id) || message.sender || message.senderId,\n          username: message.senderUsername || ((_message$sender2 = message.sender) === null || _message$sender2 === void 0 ? void 0 : _message$sender2.username)\n        },\n        recipient: {\n          id: ((_message$recipient = message.recipient) === null || _message$recipient === void 0 ? void 0 : _message$recipient.id) || message.recipient || message.recipientId,\n          username: message.recipientUsername || ((_message$recipient2 = message.recipient) === null || _message$recipient2 === void 0 ? void 0 : _message$recipient2.username)\n        }\n      };\n\n      // Only add message if it's from the current chat\n      const recipientId = parseInt(userId);\n      const senderId = parseInt(normalizedMessage.sender.id);\n      const currentUserId = parseInt(user.id);\n      if (senderId === recipientId && normalizedMessage.recipient.id === currentUserId || senderId === currentUserId && normalizedMessage.recipient.id === recipientId) {\n        setMessages(prevMessages => [...prevMessages, normalizedMessage]);\n      }\n    });\n\n    // Confirmation that message was sent\n    socketRef.current.on('private_message_sent', message => {\n      console.log('Private message sent:', message);\n    });\n\n    // Error handling\n    socketRef.current.on('message_error', error => {\n      console.error('Message error:', error);\n      setError(error.error || 'Error sending message');\n      setTimeout(() => setError(''), 3000);\n    });\n    return () => {\n      socketRef.current.off('receive_private_message');\n      socketRef.current.off('private_message_sent');\n      socketRef.current.off('message_error');\n    };\n  }, [userId, user]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Send a new message\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user || !recipientUser) return;\n\n    // Send message through socket\n    socketRef.current.emit('send_private_message', {\n      sender: user.id,\n      recipient: parseInt(userId),\n      content: newMessage.trim()\n    });\n\n    // Optimistically add message to UI\n    const optimisticMessage = {\n      id: Date.now().toString(),\n      // Temporary ID\n      sender: {\n        id: user.id,\n        username: user.username\n      },\n      recipient: {\n        id: parseInt(userId),\n        username: (recipientUser === null || recipientUser === void 0 ? void 0 : recipientUser.username) || 'User'\n      },\n      content: newMessage.trim(),\n      createdAt: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, optimisticMessage]);\n\n    // Clear input\n    setNewMessage('');\n  };\n\n  // Format message for display\n  const formatMessage = message => {\n    var _message$sender3;\n    // Normalize IDs to handle different formats\n    const senderId = ((_message$sender3 = message.sender) === null || _message$sender3 === void 0 ? void 0 : _message$sender3.id) || message.sender;\n    const currentUserId = user.id;\n    return {\n      id: message.id || message._id,\n      isOwnMessage: parseInt(senderId) === parseInt(currentUserId),\n      content: message.content,\n      time: new Date(message.createdAt).toLocaleTimeString()\n    };\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        children: [/*#__PURE__*/_jsxDEV(BackLink, {\n          to: \"/dashboard\",\n          children: \"\\xAB Back to Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Chat with \", recipientUser === null || recipientUser === void 0 ? void 0 : recipientUser.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessagesContainer, {\n        children: [loading ? /*#__PURE__*/_jsxDEV(LoadingMessage, {\n          children: \"Loading messages...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this) : error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyMessage, {\n          children: \"No messages yet. Start the conversation!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this) : messages.map(message => {\n          const formattedMessage = formatMessage(message);\n          return /*#__PURE__*/_jsxDEV(MessageBubble, {\n            isOwnMessage: formattedMessage.isOwnMessage,\n            children: [/*#__PURE__*/_jsxDEV(MessageContent, {\n              children: formattedMessage.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MessageTime, {\n              children: formattedMessage.time\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this)]\n          }, formattedMessage.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(MessageInput, {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type your message...\",\n          disabled: loading || !!error || !recipientUser,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n          type: \"submit\",\n          disabled: loading || !!error || !recipientUser || !newMessage.trim(),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PrivateChat, \"KnYh/KFxBCmfhZab++7AV+w09H8=\", false, function () {\n  return [useParams, useAuth, useNavigate];\n});\n_c = PrivateChat;\nconst ChatContainer = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-direction: column;\n`;\n_c2 = ChatContainer;\nconst ChatHeader = styled.div`\n  padding: 1.5rem;\n  background-color: var(--bg-secondary);\n  border-bottom: 1px solid var(--border-color);\n  \n  h2 {\n    margin: 0.5rem 0;\n    color: var(--text-primary);\n    text-align: center;\n  }\n`;\n_c3 = ChatHeader;\nconst BackLink = styled(Link)`\n  display: block;\n  margin-bottom: 1rem;\n  color: var(--accent-color);\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c4 = BackLink;\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--bg-primary);\n`;\n_c5 = MessagesContainer;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n_c6 = LoadingMessage;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  color: var(--danger-color);\n  margin: 1rem 0;\n`;\n_c7 = ErrorMessage;\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n_c8 = EmptyMessage;\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 0.75rem 1rem;\n  border-radius: 10px;\n  align-self: ${props => props.isOwnMessage ? 'flex-end' : 'flex-start'};\n  background-color: ${props => props.isOwnMessage ? 'var(--accent-color)' : 'var(--bg-tertiary)'};\n  color: var(--text-primary);\n  position: relative;\n`;\n_c9 = MessageBubble;\nconst MessageContent = styled.div`\n  margin-bottom: 0.25rem;\n  word-break: break-word;\n`;\n_c0 = MessageContent;\nconst MessageTime = styled.div`\n  font-size: 0.7rem;\n  color: ${props => props.isOwnMessage ? 'rgba(255, 255, 255, 0.7)' : 'var(--text-secondary)'};\n  text-align: right;\n`;\n_c1 = MessageTime;\nconst MessageForm = styled.form`\n  display: flex;\n  padding: 1rem;\n  background-color: var(--bg-secondary);\n  border-top: 1px solid var(--border-color);\n`;\n_c10 = MessageForm;\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  background-color: var(--bg-tertiary);\n  color: var(--text-primary);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--accent-color);\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n_c11 = MessageInput;\nconst SendButton = styled.button`\n  margin-left: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  background-color: var(--accent-color);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: var(--accent-hover);\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n_c12 = SendButton;\nexport default PrivateChat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12;\n$RefreshReg$(_c, \"PrivateChat\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"ChatHeader\");\n$RefreshReg$(_c4, \"BackLink\");\n$RefreshReg$(_c5, \"MessagesContainer\");\n$RefreshReg$(_c6, \"LoadingMessage\");\n$RefreshReg$(_c7, \"ErrorMessage\");\n$RefreshReg$(_c8, \"EmptyMessage\");\n$RefreshReg$(_c9, \"MessageBubble\");\n$RefreshReg$(_c0, \"MessageContent\");\n$RefreshReg$(_c1, \"MessageTime\");\n$RefreshReg$(_c10, \"MessageForm\");\n$RefreshReg$(_c11, \"MessageInput\");\n$RefreshReg$(_c12, \"SendButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","useNavigate","styled","axios","io","useAuth","Navigation","SOCKET_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","PrivateChat","_s","userId","user","navigate","recipientUser","setRecipientUser","messages","setMessages","newMessage","setNewMessage","loading","setLoading","error","setError","socketRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","emit","id","fetchData","userResponse","get","data","success","messagesResponse","sortedMessages","sort","a","b","Date","createdAt","_error$response","_error$response$data","console","response","message","disconnect","on","_message$sender","_message$sender2","_message$recipient","_message$recipient2","log","normalizedMessage","sender","senderId","username","senderUsername","recipient","recipientId","recipientUsername","parseInt","currentUserId","prevMessages","setTimeout","off","sendMessage","e","preventDefault","trim","content","optimisticMessage","now","toString","toISOString","prev","formatMessage","_message$sender3","_id","isOwnMessage","time","toLocaleTimeString","children","fileName","_jsxFileName","lineNumber","columnNumber","ChatContainer","ChatHeader","BackLink","to","ErrorMessage","MessagesContainer","LoadingMessage","length","EmptyMessage","map","formattedMessage","MessageBubble","MessageContent","MessageTime","ref","MessageForm","onSubmit","MessageInput","type","value","onChange","target","placeholder","disabled","autoFocus","SendButton","_c","div","_c2","_c3","_c4","_c5","_c6","_c7","_c8","props","_c9","_c0","_c1","form","_c10","input","_c11","button","_c12","$RefreshReg$"],"sources":["/home/orv/Documents/Projects/offline/offline/client/src/pages/PrivateChat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { useAuth } from '../context/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { SOCKET_URL } from '../config';\n\nconst PrivateChat = () => {\n  const { userId } = useParams();\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  \n  const [recipientUser, setRecipientUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  \n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  \n  // Scroll to the bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  // Initialize socket connection and fetch messages\n  useEffect(() => {\n    if (!user || !userId) return;\n\n    socketRef.current = io(SOCKET_URL);\n    \n    // Connect user\n    socketRef.current.emit('user_connected', user.id);\n    \n    // Fetch user info and messages\n    const fetchData = async () => {\n      try {\n        setError('');\n        // Fetch recipient user info using the chat route\n        const userResponse = await axios.get(`/api/users/chat/${userId}`);\n        \n        if (userResponse.data.success) {\n          setRecipientUser(userResponse.data.user);\n          \n          // Fetch messages between current user and recipient\n          const messagesResponse = await axios.get(`/api/messages/private/${userId}`);\n          \n          if (messagesResponse.data.success) {\n            // Sort messages by creation time (oldest first)\n            const sortedMessages = messagesResponse.data.messages.sort(\n              (a, b) => new Date(a.createdAt) - new Date(b.createdAt)\n            );\n            setMessages(sortedMessages);\n          }\n        } else {\n          setError('User not found');\n        }\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError('Error loading data. ' + (error.response?.data?.message || ''));\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    fetchData();\n    \n    // Cleanup socket connection\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [userId, user]);\n  \n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socketRef.current || !user || !userId) return;\n    \n    // Listen for private messages\n    socketRef.current.on('receive_private_message', (message) => {\n      console.log('Received private message:', message);\n      \n      // Normalize message format to handle different ID formats\n      const normalizedMessage = {\n        ...message,\n        sender: {\n          id: message.sender?.id || message.sender || message.senderId,\n          username: message.senderUsername || message.sender?.username\n        },\n        recipient: {\n          id: message.recipient?.id || message.recipient || message.recipientId,\n          username: message.recipientUsername || message.recipient?.username\n        }\n      };\n      \n      // Only add message if it's from the current chat\n      const recipientId = parseInt(userId);\n      const senderId = parseInt(normalizedMessage.sender.id);\n      const currentUserId = parseInt(user.id);\n      \n      if ((senderId === recipientId && normalizedMessage.recipient.id === currentUserId) || \n          (senderId === currentUserId && normalizedMessage.recipient.id === recipientId)) {\n        setMessages((prevMessages) => [...prevMessages, normalizedMessage]);\n      }\n    });\n    \n    // Confirmation that message was sent\n    socketRef.current.on('private_message_sent', (message) => {\n      console.log('Private message sent:', message);\n    });\n    \n    // Error handling\n    socketRef.current.on('message_error', (error) => {\n      console.error('Message error:', error);\n      setError(error.error || 'Error sending message');\n      setTimeout(() => setError(''), 3000);\n    });\n    \n    return () => {\n      socketRef.current.off('receive_private_message');\n      socketRef.current.off('private_message_sent');\n      socketRef.current.off('message_error');\n    };\n  }, [userId, user]);\n  \n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Send a new message\n  const sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !user || !recipientUser) return;\n    \n    // Send message through socket\n    socketRef.current.emit('send_private_message', {\n      sender: user.id,\n      recipient: parseInt(userId),\n      content: newMessage.trim(),\n    });\n    \n    // Optimistically add message to UI\n    const optimisticMessage = {\n      id: Date.now().toString(), // Temporary ID\n      sender: {\n        id: user.id,\n        username: user.username,\n      },\n      recipient: {\n        id: parseInt(userId),\n        username: recipientUser?.username || 'User',\n      },\n      content: newMessage.trim(),\n      createdAt: new Date().toISOString(),\n    };\n    \n    setMessages((prev) => [...prev, optimisticMessage]);\n    \n    // Clear input\n    setNewMessage('');\n  };\n  \n  // Format message for display\n  const formatMessage = (message) => {\n    // Normalize IDs to handle different formats\n    const senderId = message.sender?.id || message.sender;\n    const currentUserId = user.id;\n    \n    return {\n      id: message.id || message._id,\n      isOwnMessage: parseInt(senderId) === parseInt(currentUserId),\n      content: message.content,\n      time: new Date(message.createdAt).toLocaleTimeString(),\n    };\n  };\n  \n  if (!user) {\n    return <div>Please log in to view this page.</div>;\n  }\n  \n  return (\n    <>\n      <Navigation />\n      <ChatContainer>\n        <ChatHeader>\n          <BackLink to=\"/dashboard\">« Back to Dashboard</BackLink>\n          {loading ? (\n            <div>Loading...</div>\n          ) : error ? (\n            <ErrorMessage>{error}</ErrorMessage>\n          ) : (\n            <>\n              <h2>Chat with {recipientUser?.username}</h2>\n            </>\n          )}\n        </ChatHeader>\n        \n        <MessagesContainer>\n          {loading ? (\n            <LoadingMessage>Loading messages...</LoadingMessage>\n          ) : error ? (\n            <ErrorMessage>{error}</ErrorMessage>\n          ) : messages.length === 0 ? (\n            <EmptyMessage>No messages yet. Start the conversation!</EmptyMessage>\n          ) : (\n            messages.map((message) => {\n              const formattedMessage = formatMessage(message);\n              return (\n                <MessageBubble\n                  key={formattedMessage.id}\n                  isOwnMessage={formattedMessage.isOwnMessage}\n                >\n                  <MessageContent>{formattedMessage.content}</MessageContent>\n                  <MessageTime>{formattedMessage.time}</MessageTime>\n                </MessageBubble>\n              );\n            })\n          )}\n          <div ref={messagesEndRef} />\n        </MessagesContainer>\n        \n        <MessageForm onSubmit={sendMessage}>\n          <MessageInput\n            type=\"text\"\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            placeholder=\"Type your message...\"\n            disabled={loading || !!error || !recipientUser}\n            autoFocus\n          />\n          <SendButton type=\"submit\" disabled={loading || !!error || !recipientUser || !newMessage.trim()}>\n            Send\n          </SendButton>\n        </MessageForm>\n      </ChatContainer>\n    </>\n  );\n};\n\nconst ChatContainer = styled.div`\n  max-width: 900px;\n  margin: 0 auto;\n  height: calc(100vh - 60px);\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 1.5rem;\n  background-color: var(--bg-secondary);\n  border-bottom: 1px solid var(--border-color);\n  \n  h2 {\n    margin: 0.5rem 0;\n    color: var(--text-primary);\n    text-align: center;\n  }\n`;\n\nconst BackLink = styled(Link)`\n  display: block;\n  margin-bottom: 1rem;\n  color: var(--accent-color);\n  \n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--bg-primary);\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  color: var(--danger-color);\n  margin: 1rem 0;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 0.75rem 1rem;\n  border-radius: 10px;\n  align-self: ${(props) => (props.isOwnMessage ? 'flex-end' : 'flex-start')};\n  background-color: ${(props) =>\n    props.isOwnMessage ? 'var(--accent-color)' : 'var(--bg-tertiary)'};\n  color: var(--text-primary);\n  position: relative;\n`;\n\nconst MessageContent = styled.div`\n  margin-bottom: 0.25rem;\n  word-break: break-word;\n`;\n\nconst MessageTime = styled.div`\n  font-size: 0.7rem;\n  color: ${(props) =>\n    props.isOwnMessage ? 'rgba(255, 255, 255, 0.7)' : 'var(--text-secondary)'};\n  text-align: right;\n`;\n\nconst MessageForm = styled.form`\n  display: flex;\n  padding: 1rem;\n  background-color: var(--bg-secondary);\n  border-top: 1px solid var(--border-color);\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  background-color: var(--bg-tertiary);\n  color: var(--text-primary);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--accent-color);\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst SendButton = styled.button`\n  margin-left: 0.5rem;\n  padding: 0.75rem 1.5rem;\n  background-color: var(--accent-color);\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: var(--accent-hover);\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nexport default PrivateChat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}