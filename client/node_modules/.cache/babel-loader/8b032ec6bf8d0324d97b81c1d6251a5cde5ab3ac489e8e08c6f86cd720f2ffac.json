{"ast":null,"code":"var _jsxFileName = \"/home/orv/Documents/Projects/offline/offline/client/src/pages/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { useAuth } from '../context/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [processingIds, setProcessingIds] = useState(new Set()); // Track messages being processed\n\n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n\n  // Scroll to the bottom of messages\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Initialize socket connection\n  useEffect(() => {\n    if (!user) return;\n\n    // Get the server URL from the proxy or use localhost\n    const serverUrl = process.env.REACT_APP_API_URL || '';\n    socketRef.current = io(serverUrl);\n\n    // Connect user\n    socketRef.current.emit('user_connected', user.id);\n\n    // Fetch existing messages\n    const fetchMessages = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('/api/messages');\n        if (data.success) {\n          setMessages(data.messages);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // If user is admin, fetch pending messages\n    if (user.isAdmin) {\n      const fetchPendingMessages = async () => {\n        try {\n          const {\n            data\n          } = await axios.get('/api/messages/pending');\n          if (data.success) {\n            // Create a set of existing pending message IDs to avoid duplicates\n            const existingIds = new Set(pendingMessages.map(msg => msg.id || msg._id));\n            // Only add new messages that aren't already in the list\n            const newPendingMessages = data.messages.filter(msg => !existingIds.has(msg.id || msg._id));\n            setPendingMessages(prev => [...prev, ...newPendingMessages]);\n          }\n        } catch (error) {\n          console.error('Error fetching pending messages:', error);\n        }\n      };\n      fetchPendingMessages();\n    }\n    fetchMessages();\n\n    // Clean up socket connection on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [user]);\n\n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socketRef.current || !user) return;\n\n    // Receive approved messages\n    socketRef.current.on('approved_message', message => {\n      console.log('Received approved message:', message);\n      setMessages(prevMessages => {\n        // Check if message already exists to avoid duplicates\n        const exists = prevMessages.some(msg => msg.id === message.id || msg._id === message._id);\n        if (exists) return prevMessages;\n        return [...prevMessages, message];\n      });\n\n      // If this is one of the user's pending messages, remove it from pending\n      if (message.sender.id === user.id || message.sender._id === user.id) {\n        setPendingMessages(prevPending => prevPending.filter(msg => msg.id !== message.id && msg._id !== message._id));\n      }\n\n      // Remove from processing set if it was being processed\n      setProcessingIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(message.id);\n        newSet.delete(message._id);\n        return newSet;\n      });\n    });\n\n    // Message was sent for approval\n    socketRef.current.on('message_sent_for_approval', messageId => {\n      console.log('Message sent for approval:', messageId);\n    });\n\n    // New pending message (admin only)\n    if (user.isAdmin) {\n      socketRef.current.on('pending_approval', message => {\n        console.log('New pending message:', message);\n        // Check if message already exists in pending list\n        setPendingMessages(prevPending => {\n          const exists = prevPending.some(msg => msg.id === message.id || msg._id === message._id);\n          if (exists) return prevPending;\n          return [...prevPending, message];\n        });\n      });\n    }\n\n    // Message was rejected (admin only)\n    socketRef.current.on('message_rejected', messageId => {\n      setPendingMessages(prevPending => prevPending.filter(msg => msg.id !== messageId && msg._id !== messageId));\n\n      // Remove from processing set\n      setProcessingIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(messageId);\n        return newSet;\n      });\n    });\n\n    // Online users update\n    socketRef.current.on('online_users', users => {\n      setOnlineUsers(users);\n    });\n\n    // User disconnected\n    socketRef.current.on('user_disconnected', socketId => {\n      // This could be improved with more information from the server\n      console.log('User disconnected:', socketId);\n    });\n\n    // Error handling\n    socketRef.current.on('message_error', error => {\n      console.error('Message error:', error);\n      // Remove all processing IDs on error to allow retry\n      setProcessingIds(new Set());\n    });\n    return () => {\n      socketRef.current.off('approved_message');\n      socketRef.current.off('message_sent_for_approval');\n      socketRef.current.off('pending_approval');\n      socketRef.current.off('message_rejected');\n      socketRef.current.off('online_users');\n      socketRef.current.off('user_disconnected');\n      socketRef.current.off('message_error');\n    };\n  }, [user, pendingMessages]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  // Send a new message\n  const sendMessage = e => {\n    e.preventDefault();\n    if (!newMessage.trim() || !user) return;\n\n    // Send message through socket\n    socketRef.current.emit('send_public_message', {\n      sender: user.id,\n      content: newMessage.trim()\n    });\n\n    // Add to pending messages for current user\n    const pendingMsg = {\n      id: Date.now().toString(),\n      // Temporary ID\n      sender: {\n        id: user.id,\n        username: user.username\n      },\n      content: newMessage.trim(),\n      createdAt: new Date().toISOString(),\n      isPending: true // Custom flag to identify as pending in UI\n    };\n    setPendingMessages(prev => [...prev, pendingMsg]);\n\n    // Clear input\n    setNewMessage('');\n  };\n\n  // Approve a message (admin only)\n  const approveMessage = messageId => {\n    if (!user.isAdmin || !socketRef.current) return;\n\n    // Add to processing set to prevent duplicate approvals\n    setProcessingIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(messageId);\n      return newSet;\n    });\n    socketRef.current.emit('approve_message', messageId);\n  };\n\n  // Reject a message (admin only)\n  const rejectMessage = messageId => {\n    if (!user.isAdmin || !socketRef.current) return;\n\n    // Add to processing set to prevent duplicate rejections\n    setProcessingIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(messageId);\n      return newSet;\n    });\n    socketRef.current.emit('reject_message', messageId);\n  };\n\n  // Navigate to private chat with user\n  const goToPrivateChat = userId => {\n    if (userId === user.id) return; // Don't chat with yourself\n    navigate(`/private-chat/${userId}`);\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Please log in to view this page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ChatSidebar, {\n        children: [/*#__PURE__*/_jsxDEV(SidebarSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Online Users\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OnlineUsersList, {\n            children: onlineUsers.map(onlineUser => /*#__PURE__*/_jsxDEV(OnlineUser, {\n              onClick: () => goToPrivateChat(onlineUser.id || onlineUser._id),\n              isCurrentUser: onlineUser.id === user.id || onlineUser._id === user._id,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: onlineUser.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this), onlineUser.isAdmin && /*#__PURE__*/_jsxDEV(AdminBadge, {\n                children: \"Admin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 42\n              }, this), onlineUser.id !== user.id && onlineUser._id !== user._id && /*#__PURE__*/_jsxDEV(ChatButton, {\n                title: \"Start private chat\",\n                children: \"Chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 21\n              }, this)]\n            }, onlineUser.id || onlineUser._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), user.isAdmin && pendingMessages.length > 0 && /*#__PURE__*/_jsxDEV(SidebarSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Messages Awaiting Approval\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(PendingMessagesList, {\n            children: pendingMessages.map(message => {\n              var _message$sender;\n              const messageId = message.id || message._id;\n              const isProcessing = processingIds.has(messageId);\n              return /*#__PURE__*/_jsxDEV(PendingMessage, {\n                children: [/*#__PURE__*/_jsxDEV(PendingMessageHeader, {\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: ((_message$sender = message.sender) === null || _message$sender === void 0 ? void 0 : _message$sender.username) || message.senderUsername || 'User'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(PendingTime, {\n                    children: new Date(message.createdAt).toLocaleTimeString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(PendingMessageContent, {\n                  children: message.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(PendingMessageActions, {\n                  children: [/*#__PURE__*/_jsxDEV(ApproveButton, {\n                    onClick: () => approveMessage(messageId),\n                    disabled: isProcessing,\n                    children: isProcessing ? 'Processing...' : 'Approve'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(RejectButton, {\n                    onClick: () => rejectMessage(messageId),\n                    disabled: isProcessing,\n                    children: isProcessing ? 'Processing...' : 'Reject'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)]\n              }, messageId, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatMain, {\n        children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Public Chatroom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Messages will be displayed after admin approval.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessagesContainer, {\n          children: [loading ? /*#__PURE__*/_jsxDEV(LoadingMessage, {\n            children: \"Loading messages...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this) : messages.length === 0 ? /*#__PURE__*/_jsxDEV(EmptyMessage, {\n            children: \"No messages have been sent yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this) : messages.map(message => {\n            const isOwnMessage = message.sender.id === user.id || message.sender._id === user.id;\n            return /*#__PURE__*/_jsxDEV(MessageBubble, {\n              isOwnMessage: isOwnMessage,\n              children: [/*#__PURE__*/_jsxDEV(MessageHeader, {\n                children: [/*#__PURE__*/_jsxDEV(MessageSender, {\n                  onClick: () => goToPrivateChat(message.sender.id || message.sender._id),\n                  isClickable: !isOwnMessage,\n                  children: message.sender.username || message.senderUsername\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(MessageTime, {\n                  children: new Date(message.createdAt).toLocaleTimeString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MessageContent, {\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 345,\n                columnNumber: 21\n              }, this)]\n            }, message.id || message._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 19\n            }, this);\n          }), pendingMessages.filter(message => message.sender.id === user.id || message.sender._id === user.id).map(message => /*#__PURE__*/_jsxDEV(MessageBubble, {\n            isOwnMessage: true,\n            isPending: true,\n            children: [/*#__PURE__*/_jsxDEV(MessageHeader, {\n              children: [/*#__PURE__*/_jsxDEV(MessageSender, {\n                children: message.sender.username || message.senderUsername\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MessageTime, {\n                children: new Date(message.createdAt).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MessageContent, {\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(PendingIndicator, {\n              children: \"Awaiting Approval\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 19\n            }, this)]\n          }, message.id || message._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MessageForm, {\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(MessageInput, {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type your message...\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SendButton, {\n            type: \"submit\",\n            disabled: !newMessage.trim(),\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Chat, \"rjyPAhJx0IBxKwPUVRjGPHvNosU=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Chat;\nconst ChatContainer = styled.div`\n  display: flex;\n  height: calc(100vh - 60px);\n  max-width: 1400px;\n  margin: 0 auto;\n  background-color: var(--bg-primary);\n`;\n_c2 = ChatContainer;\nconst ChatSidebar = styled.div`\n  width: 300px;\n  background-color: var(--bg-secondary);\n  border-left: 1px solid var(--border-color);\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n_c3 = ChatSidebar;\nconst SidebarSection = styled.div`\n  padding: 1.5rem;\n  border-bottom: 1px solid var(--border-color);\n  \n  h3 {\n    margin-bottom: 1rem;\n    font-size: 1rem;\n    color: var(--text-primary);\n  }\n`;\n_c4 = SidebarSection;\nconst OnlineUsersList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n_c5 = OnlineUsersList;\nconst OnlineUser = styled.li`\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  background-color: var(--bg-tertiary);\n  border-radius: 4px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--text-secondary);\n  cursor: ${props => props.isCurrentUser ? 'default' : 'pointer'};\n  \n  &:hover {\n    background-color: ${props => props.isCurrentUser ? 'var(--bg-tertiary)' : 'var(--bg-primary)'};\n  }\n`;\n_c6 = OnlineUser;\nconst ChatButton = styled.button`\n  background-color: var(--accent-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.2rem 0.4rem;\n  font-size: 0.7rem;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--accent-hover);\n  }\n`;\n_c7 = ChatButton;\nconst AdminBadge = styled.span`\n  background-color: var(--danger-color);\n  color: var(--text-primary);\n  font-size: 0.7rem;\n  padding: 0.2rem 0.4rem;\n  border-radius: 3px;\n`;\n_c8 = AdminBadge;\nconst PendingMessagesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n_c9 = PendingMessagesList;\nconst PendingMessage = styled.div`\n  background-color: var(--bg-tertiary);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 1rem;\n`;\n_c0 = PendingMessage;\nconst PendingMessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n  \n  span {\n    font-weight: 500;\n    color: var(--text-primary);\n  }\n`;\n_c1 = PendingMessageHeader;\nconst PendingTime = styled.span`\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n`;\n_c10 = PendingTime;\nconst PendingMessageContent = styled.p`\n  margin-bottom: 1rem;\n  color: var(--text-secondary);\n`;\n_c11 = PendingMessageContent;\nconst PendingMessageActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.5rem;\n`;\n_c12 = PendingMessageActions;\nconst ApproveButton = styled.button`\n  background-color: var(--success-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: #27ae60;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n_c13 = ApproveButton;\nconst RejectButton = styled.button`\n  background-color: var(--danger-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: #c0392b;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n_c14 = RejectButton;\nconst ChatMain = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n_c15 = ChatMain;\nconst ChatHeader = styled.div`\n  padding: 1.5rem;\n  background-color: var(--bg-secondary);\n  border-bottom: 1px solid var(--border-color);\n  text-align: center;\n  \n  h2 {\n    margin-bottom: 0.5rem;\n    color: var(--text-primary);\n  }\n  \n  p {\n    color: var(--text-secondary);\n    font-size: 0.9rem;\n  }\n`;\n_c16 = ChatHeader;\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--bg-primary);\n`;\n_c17 = MessagesContainer;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n_c18 = LoadingMessage;\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n_c19 = EmptyMessage;\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 1rem;\n  border-radius: 8px;\n  background-color: ${props => props.isOwnMessage ? 'var(--accent-color)' : 'var(--bg-secondary)'};\n  color: ${props => props.isOwnMessage ? 'var(--text-primary)' : 'var(--text-primary)'};\n  align-self: ${props => props.isOwnMessage ? 'flex-end' : 'flex-start'};\n  box-shadow: 0 1px 2px var(--shadow-color);\n  opacity: ${props => props.isPending ? 0.7 : 1};\n  position: relative;\n`;\n_c20 = MessageBubble;\nconst MessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n`;\n_c21 = MessageHeader;\nconst MessageSender = styled.span`\n  font-weight: 500;\n  cursor: ${props => props.isClickable ? 'pointer' : 'default'};\n  \n  &:hover {\n    text-decoration: ${props => props.isClickable ? 'underline' : 'none'};\n    color: ${props => props.isClickable ? 'var(--accent-color)' : 'inherit'};\n  }\n`;\n_c22 = MessageSender;\nconst MessageTime = styled.span`\n  font-size: 0.8rem;\n  opacity: 0.8;\n`;\n_c23 = MessageTime;\nconst MessageContent = styled.p`\n  word-break: break-word;\n`;\n_c24 = MessageContent;\nconst PendingIndicator = styled.div`\n  font-size: 0.7rem;\n  color: var(--text-secondary);\n  margin-top: 0.5rem;\n  text-align: right;\n  font-style: italic;\n`;\n_c25 = PendingIndicator;\nconst MessageForm = styled.form`\n  display: flex;\n  padding: 1rem;\n  background-color: var(--bg-secondary);\n  border-top: 1px solid var(--border-color);\n`;\n_c26 = MessageForm;\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color);\n  border-radius: 4px 0 0 4px;\n  font-size: 1rem;\n  background-color: var(--bg-tertiary);\n  color: var(--text-primary);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--accent-color);\n  }\n`;\n_c27 = MessageInput;\nconst SendButton = styled.button`\n  background-color: var(--accent-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 0 4px 4px 0;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--accent-hover);\n  }\n  \n  &:disabled {\n    background-color: #555;\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n_c28 = SendButton;\nexport default Chat;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24, _c25, _c26, _c27, _c28;\n$RefreshReg$(_c, \"Chat\");\n$RefreshReg$(_c2, \"ChatContainer\");\n$RefreshReg$(_c3, \"ChatSidebar\");\n$RefreshReg$(_c4, \"SidebarSection\");\n$RefreshReg$(_c5, \"OnlineUsersList\");\n$RefreshReg$(_c6, \"OnlineUser\");\n$RefreshReg$(_c7, \"ChatButton\");\n$RefreshReg$(_c8, \"AdminBadge\");\n$RefreshReg$(_c9, \"PendingMessagesList\");\n$RefreshReg$(_c0, \"PendingMessage\");\n$RefreshReg$(_c1, \"PendingMessageHeader\");\n$RefreshReg$(_c10, \"PendingTime\");\n$RefreshReg$(_c11, \"PendingMessageContent\");\n$RefreshReg$(_c12, \"PendingMessageActions\");\n$RefreshReg$(_c13, \"ApproveButton\");\n$RefreshReg$(_c14, \"RejectButton\");\n$RefreshReg$(_c15, \"ChatMain\");\n$RefreshReg$(_c16, \"ChatHeader\");\n$RefreshReg$(_c17, \"MessagesContainer\");\n$RefreshReg$(_c18, \"LoadingMessage\");\n$RefreshReg$(_c19, \"EmptyMessage\");\n$RefreshReg$(_c20, \"MessageBubble\");\n$RefreshReg$(_c21, \"MessageHeader\");\n$RefreshReg$(_c22, \"MessageSender\");\n$RefreshReg$(_c23, \"MessageTime\");\n$RefreshReg$(_c24, \"MessageContent\");\n$RefreshReg$(_c25, \"PendingIndicator\");\n$RefreshReg$(_c26, \"MessageForm\");\n$RefreshReg$(_c27, \"MessageInput\");\n$RefreshReg$(_c28, \"SendButton\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","styled","axios","io","useAuth","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","Chat","_s","user","navigate","messages","setMessages","newMessage","setNewMessage","pendingMessages","setPendingMessages","onlineUsers","setOnlineUsers","loading","setLoading","processingIds","setProcessingIds","Set","socketRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","serverUrl","process","env","REACT_APP_API_URL","emit","id","fetchMessages","data","get","success","error","console","isAdmin","fetchPendingMessages","existingIds","map","msg","_id","newPendingMessages","filter","has","prev","disconnect","on","message","log","prevMessages","exists","some","sender","prevPending","newSet","delete","messageId","users","socketId","off","sendMessage","e","preventDefault","trim","content","pendingMsg","Date","now","toString","username","createdAt","toISOString","isPending","approveMessage","add","rejectMessage","goToPrivateChat","userId","children","fileName","_jsxFileName","lineNumber","columnNumber","ChatContainer","ChatSidebar","SidebarSection","OnlineUsersList","onlineUser","OnlineUser","onClick","isCurrentUser","AdminBadge","ChatButton","title","length","PendingMessagesList","_message$sender","isProcessing","PendingMessage","PendingMessageHeader","senderUsername","PendingTime","toLocaleTimeString","PendingMessageContent","PendingMessageActions","ApproveButton","disabled","RejectButton","ChatMain","ChatHeader","MessagesContainer","LoadingMessage","EmptyMessage","isOwnMessage","MessageBubble","MessageHeader","MessageSender","isClickable","MessageTime","MessageContent","PendingIndicator","ref","MessageForm","onSubmit","MessageInput","type","value","onChange","target","placeholder","autoFocus","SendButton","_c","div","_c2","_c3","_c4","ul","_c5","li","props","_c6","button","_c7","span","_c8","_c9","_c0","_c1","_c10","p","_c11","_c12","_c13","_c14","_c15","_c16","_c17","_c18","_c19","_c20","_c21","_c22","_c23","_c24","_c25","form","_c26","input","_c27","_c28","$RefreshReg$"],"sources":["/home/orv/Documents/Projects/offline/offline/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { useAuth } from '../context/AuthContext';\nimport Navigation from '../components/Navigation';\n\nconst Chat = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [processingIds, setProcessingIds] = useState(new Set()); // Track messages being processed\n  \n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  \n  // Scroll to the bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  // Initialize socket connection\n  useEffect(() => {\n    if (!user) return;\n    \n    // Get the server URL from the proxy or use localhost\n    const serverUrl = process.env.REACT_APP_API_URL || '';\n    socketRef.current = io(serverUrl);\n    \n    // Connect user\n    socketRef.current.emit('user_connected', user.id);\n    \n    // Fetch existing messages\n    const fetchMessages = async () => {\n      try {\n        const { data } = await axios.get('/api/messages');\n        if (data.success) {\n          setMessages(data.messages);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    // If user is admin, fetch pending messages\n    if (user.isAdmin) {\n      const fetchPendingMessages = async () => {\n        try {\n          const { data } = await axios.get('/api/messages/pending');\n          if (data.success) {\n            // Create a set of existing pending message IDs to avoid duplicates\n            const existingIds = new Set(pendingMessages.map(msg => msg.id || msg._id));\n            // Only add new messages that aren't already in the list\n            const newPendingMessages = data.messages.filter(\n              msg => !existingIds.has(msg.id || msg._id)\n            );\n            setPendingMessages(prev => [...prev, ...newPendingMessages]);\n          }\n        } catch (error) {\n          console.error('Error fetching pending messages:', error);\n        }\n      };\n      \n      fetchPendingMessages();\n    }\n    \n    fetchMessages();\n    \n    // Clean up socket connection on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [user]);\n  \n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socketRef.current || !user) return;\n    \n    // Receive approved messages\n    socketRef.current.on('approved_message', (message) => {\n      console.log('Received approved message:', message);\n      setMessages((prevMessages) => {\n        // Check if message already exists to avoid duplicates\n        const exists = prevMessages.some(\n          msg => (msg.id === message.id) || (msg._id === message._id)\n        );\n        if (exists) return prevMessages;\n        return [...prevMessages, message];\n      });\n      \n      // If this is one of the user's pending messages, remove it from pending\n      if (message.sender.id === user.id || message.sender._id === user.id) {\n        setPendingMessages((prevPending) => \n          prevPending.filter((msg) => msg.id !== message.id && msg._id !== message._id)\n        );\n      }\n      \n      // Remove from processing set if it was being processed\n      setProcessingIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(message.id);\n        newSet.delete(message._id);\n        return newSet;\n      });\n    });\n    \n    // Message was sent for approval\n    socketRef.current.on('message_sent_for_approval', (messageId) => {\n      console.log('Message sent for approval:', messageId);\n    });\n    \n    // New pending message (admin only)\n    if (user.isAdmin) {\n      socketRef.current.on('pending_approval', (message) => {\n        console.log('New pending message:', message);\n        // Check if message already exists in pending list\n        setPendingMessages((prevPending) => {\n          const exists = prevPending.some(\n            msg => (msg.id === message.id) || (msg._id === message._id)\n          );\n          if (exists) return prevPending;\n          return [...prevPending, message];\n        });\n      });\n    }\n    \n    // Message was rejected (admin only)\n    socketRef.current.on('message_rejected', (messageId) => {\n      setPendingMessages((prevPending) => \n        prevPending.filter((msg) => msg.id !== messageId && msg._id !== messageId)\n      );\n      \n      // Remove from processing set\n      setProcessingIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(messageId);\n        return newSet;\n      });\n    });\n    \n    // Online users update\n    socketRef.current.on('online_users', (users) => {\n      setOnlineUsers(users);\n    });\n    \n    // User disconnected\n    socketRef.current.on('user_disconnected', (socketId) => {\n      // This could be improved with more information from the server\n      console.log('User disconnected:', socketId);\n    });\n    \n    // Error handling\n    socketRef.current.on('message_error', (error) => {\n      console.error('Message error:', error);\n      // Remove all processing IDs on error to allow retry\n      setProcessingIds(new Set());\n    });\n    \n    return () => {\n      socketRef.current.off('approved_message');\n      socketRef.current.off('message_sent_for_approval');\n      socketRef.current.off('pending_approval');\n      socketRef.current.off('message_rejected');\n      socketRef.current.off('online_users');\n      socketRef.current.off('user_disconnected');\n      socketRef.current.off('message_error');\n    };\n  }, [user, pendingMessages]);\n  \n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Send a new message\n  const sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !user) return;\n    \n    // Send message through socket\n    socketRef.current.emit('send_public_message', {\n      sender: user.id,\n      content: newMessage.trim(),\n    });\n    \n    // Add to pending messages for current user\n    const pendingMsg = {\n      id: Date.now().toString(), // Temporary ID\n      sender: {\n        id: user.id,\n        username: user.username,\n      },\n      content: newMessage.trim(),\n      createdAt: new Date().toISOString(),\n      isPending: true, // Custom flag to identify as pending in UI\n    };\n    \n    setPendingMessages((prev) => [...prev, pendingMsg]);\n    \n    // Clear input\n    setNewMessage('');\n  };\n  \n  // Approve a message (admin only)\n  const approveMessage = (messageId) => {\n    if (!user.isAdmin || !socketRef.current) return;\n    \n    // Add to processing set to prevent duplicate approvals\n    setProcessingIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(messageId);\n      return newSet;\n    });\n    \n    socketRef.current.emit('approve_message', messageId);\n  };\n  \n  // Reject a message (admin only)\n  const rejectMessage = (messageId) => {\n    if (!user.isAdmin || !socketRef.current) return;\n    \n    // Add to processing set to prevent duplicate rejections\n    setProcessingIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(messageId);\n      return newSet;\n    });\n    \n    socketRef.current.emit('reject_message', messageId);\n  };\n  \n  // Navigate to private chat with user\n  const goToPrivateChat = (userId) => {\n    if (userId === user.id) return; // Don't chat with yourself\n    navigate(`/private-chat/${userId}`);\n  };\n  \n  if (!user) {\n    return <div>Please log in to view this page.</div>;\n  }\n  \n  return (\n    <>\n      <Navigation />\n      <ChatContainer>\n        <ChatSidebar>\n          <SidebarSection>\n            <h3>Online Users</h3>\n            <OnlineUsersList>\n              {onlineUsers.map((onlineUser) => (\n                <OnlineUser \n                  key={onlineUser.id || onlineUser._id}\n                  onClick={() => goToPrivateChat(onlineUser.id || onlineUser._id)}\n                  isCurrentUser={(onlineUser.id === user.id) || (onlineUser._id === user._id)}\n                >\n                  <span>{onlineUser.username}</span>\n                  {onlineUser.isAdmin && <AdminBadge>Admin</AdminBadge>}\n                  {(onlineUser.id !== user.id) && (onlineUser._id !== user._id) && (\n                    <ChatButton title=\"Start private chat\">Chat</ChatButton>\n                  )}\n                </OnlineUser>\n              ))}\n            </OnlineUsersList>\n          </SidebarSection>\n          \n          {user.isAdmin && pendingMessages.length > 0 && (\n            <SidebarSection>\n              <h3>Messages Awaiting Approval</h3>\n              <PendingMessagesList>\n                {pendingMessages.map((message) => {\n                  const messageId = message.id || message._id;\n                  const isProcessing = processingIds.has(messageId);\n                  \n                  return (\n                    <PendingMessage key={messageId}>\n                      <PendingMessageHeader>\n                        <span>{message.sender?.username || message.senderUsername || 'User'}</span>\n                        <PendingTime>\n                          {new Date(message.createdAt).toLocaleTimeString()}\n                        </PendingTime>\n                      </PendingMessageHeader>\n                      <PendingMessageContent>{message.content}</PendingMessageContent>\n                      <PendingMessageActions>\n                        <ApproveButton \n                          onClick={() => approveMessage(messageId)}\n                          disabled={isProcessing}\n                        >\n                          {isProcessing ? 'Processing...' : 'Approve'}\n                        </ApproveButton>\n                        <RejectButton \n                          onClick={() => rejectMessage(messageId)}\n                          disabled={isProcessing}\n                        >\n                          {isProcessing ? 'Processing...' : 'Reject'}\n                        </RejectButton>\n                      </PendingMessageActions>\n                    </PendingMessage>\n                  );\n                })}\n              </PendingMessagesList>\n            </SidebarSection>\n          )}\n        </ChatSidebar>\n        \n        <ChatMain>\n          <ChatHeader>\n            <h2>Public Chatroom</h2>\n            <p>Messages will be displayed after admin approval.</p>\n          </ChatHeader>\n          \n          <MessagesContainer>\n            {loading ? (\n              <LoadingMessage>Loading messages...</LoadingMessage>\n            ) : messages.length === 0 ? (\n              <EmptyMessage>No messages have been sent yet.</EmptyMessage>\n            ) : (\n              messages.map((message) => {\n                const isOwnMessage = (message.sender.id === user.id) || (message.sender._id === user.id);\n                return (\n                  <MessageBubble\n                    key={message.id || message._id}\n                    isOwnMessage={isOwnMessage}\n                  >\n                    <MessageHeader>\n                      <MessageSender \n                        onClick={() => goToPrivateChat(message.sender.id || message.sender._id)}\n                        isClickable={!isOwnMessage}\n                      >\n                        {message.sender.username || message.senderUsername}\n                      </MessageSender>\n                      <MessageTime>\n                        {new Date(message.createdAt).toLocaleTimeString()}\n                      </MessageTime>\n                    </MessageHeader>\n                    <MessageContent>{message.content}</MessageContent>\n                  </MessageBubble>\n                );\n              })\n            )}\n            \n            {/* Show user's pending messages */}\n            {pendingMessages\n              .filter((message) => (message.sender.id === user.id) || (message.sender._id === user.id))\n              .map((message) => (\n                <MessageBubble key={message.id || message._id} isOwnMessage isPending>\n                  <MessageHeader>\n                    <MessageSender>{message.sender.username || message.senderUsername}</MessageSender>\n                    <MessageTime>\n                      {new Date(message.createdAt).toLocaleTimeString()}\n                    </MessageTime>\n                  </MessageHeader>\n                  <MessageContent>{message.content}</MessageContent>\n                  <PendingIndicator>Awaiting Approval</PendingIndicator>\n                </MessageBubble>\n              ))}\n            \n            <div ref={messagesEndRef} />\n          </MessagesContainer>\n          \n          <MessageForm onSubmit={sendMessage}>\n            <MessageInput\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n              autoFocus\n            />\n            <SendButton type=\"submit\" disabled={!newMessage.trim()}>Send</SendButton>\n          </MessageForm>\n        </ChatMain>\n      </ChatContainer>\n    </>\n  );\n};\n\nconst ChatContainer = styled.div`\n  display: flex;\n  height: calc(100vh - 60px);\n  max-width: 1400px;\n  margin: 0 auto;\n  background-color: var(--bg-primary);\n`;\n\nconst ChatSidebar = styled.div`\n  width: 300px;\n  background-color: var(--bg-secondary);\n  border-left: 1px solid var(--border-color);\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SidebarSection = styled.div`\n  padding: 1.5rem;\n  border-bottom: 1px solid var(--border-color);\n  \n  h3 {\n    margin-bottom: 1rem;\n    font-size: 1rem;\n    color: var(--text-primary);\n  }\n`;\n\nconst OnlineUsersList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst OnlineUser = styled.li`\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  background-color: var(--bg-tertiary);\n  border-radius: 4px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--text-secondary);\n  cursor: ${props => props.isCurrentUser ? 'default' : 'pointer'};\n  \n  &:hover {\n    background-color: ${props => props.isCurrentUser ? 'var(--bg-tertiary)' : 'var(--bg-primary)'};\n  }\n`;\n\nconst ChatButton = styled.button`\n  background-color: var(--accent-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.2rem 0.4rem;\n  font-size: 0.7rem;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--accent-hover);\n  }\n`;\n\nconst AdminBadge = styled.span`\n  background-color: var(--danger-color);\n  color: var(--text-primary);\n  font-size: 0.7rem;\n  padding: 0.2rem 0.4rem;\n  border-radius: 3px;\n`;\n\nconst PendingMessagesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst PendingMessage = styled.div`\n  background-color: var(--bg-tertiary);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 1rem;\n`;\n\nconst PendingMessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n  \n  span {\n    font-weight: 500;\n    color: var(--text-primary);\n  }\n`;\n\nconst PendingTime = styled.span`\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n`;\n\nconst PendingMessageContent = styled.p`\n  margin-bottom: 1rem;\n  color: var(--text-secondary);\n`;\n\nconst PendingMessageActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.5rem;\n`;\n\nconst ApproveButton = styled.button`\n  background-color: var(--success-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: #27ae60;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst RejectButton = styled.button`\n  background-color: var(--danger-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: #c0392b;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst ChatMain = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 1.5rem;\n  background-color: var(--bg-secondary);\n  border-bottom: 1px solid var(--border-color);\n  text-align: center;\n  \n  h2 {\n    margin-bottom: 0.5rem;\n    color: var(--text-primary);\n  }\n  \n  p {\n    color: var(--text-secondary);\n    font-size: 0.9rem;\n  }\n`;\n\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--bg-primary);\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 1rem;\n  border-radius: 8px;\n  background-color: ${(props) => (props.isOwnMessage ? 'var(--accent-color)' : 'var(--bg-secondary)')};\n  color: ${(props) => (props.isOwnMessage ? 'var(--text-primary)' : 'var(--text-primary)')};\n  align-self: ${(props) => (props.isOwnMessage ? 'flex-end' : 'flex-start')};\n  box-shadow: 0 1px 2px var(--shadow-color);\n  opacity: ${(props) => (props.isPending ? 0.7 : 1)};\n  position: relative;\n`;\n\nconst MessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageSender = styled.span`\n  font-weight: 500;\n  cursor: ${props => props.isClickable ? 'pointer' : 'default'};\n  \n  &:hover {\n    text-decoration: ${props => props.isClickable ? 'underline' : 'none'};\n    color: ${props => props.isClickable ? 'var(--accent-color)' : 'inherit'};\n  }\n`;\n\nconst MessageTime = styled.span`\n  font-size: 0.8rem;\n  opacity: 0.8;\n`;\n\nconst MessageContent = styled.p`\n  word-break: break-word;\n`;\n\nconst PendingIndicator = styled.div`\n  font-size: 0.7rem;\n  color: var(--text-secondary);\n  margin-top: 0.5rem;\n  text-align: right;\n  font-style: italic;\n`;\n\nconst MessageForm = styled.form`\n  display: flex;\n  padding: 1rem;\n  background-color: var(--bg-secondary);\n  border-top: 1px solid var(--border-color);\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color);\n  border-radius: 4px 0 0 4px;\n  font-size: 1rem;\n  background-color: var(--bg-tertiary);\n  color: var(--text-primary);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--accent-color);\n  }\n`;\n\nconst SendButton = styled.button`\n  background-color: var(--accent-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 0 4px 4px 0;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--accent-hover);\n  }\n  \n  &:disabled {\n    background-color: #555;\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}