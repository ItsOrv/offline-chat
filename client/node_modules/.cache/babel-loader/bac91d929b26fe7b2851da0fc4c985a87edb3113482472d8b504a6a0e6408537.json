{"ast":null,"code":"import _taggedTemplateLiteral from\"/home/orv/Documents/Projects/offline-chat/client/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10,_templateObject11,_templateObject12,_templateObject13,_templateObject14,_templateObject15,_templateObject16,_templateObject17,_templateObject18,_templateObject19,_templateObject20,_templateObject21,_templateObject22,_templateObject23,_templateObject24,_templateObject25,_templateObject26,_templateObject27;import React,{useState,useEffect,useRef}from'react';import{useNavigate}from'react-router-dom';import styled from'styled-components';import axios from'axios';import{io}from'socket.io-client';import{useAuth}from'../context/AuthContext';import Navigation from'../components/Navigation';import{SOCKET_URL}from'../config';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chat=()=>{const{user}=useAuth();const navigate=useNavigate();const[messages,setMessages]=useState([]);const[newMessage,setNewMessage]=useState('');const[pendingMessages,setPendingMessages]=useState([]);const[onlineUsers,setOnlineUsers]=useState([]);const[loading,setLoading]=useState(true);const[processingIds,setProcessingIds]=useState(new Set());// Track messages being processed\nconst socketRef=useRef();const messagesEndRef=useRef(null);// Scroll to the bottom of messages\nconst scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:'smooth'});};// Initialize socket connection\nuseEffect(()=>{if(!user)return;// Get the server URL from the proxy or use localhost\nsocketRef.current=io(SOCKET_URL);// Connect user\nsocketRef.current.emit('user_connected',user.id);// Fetch existing messages\nconst fetchMessages=async()=>{try{const{data}=await axios.get('/api/messages');if(data.success){setMessages(data.messages);}}catch(error){console.error('Error fetching messages:',error);}finally{setLoading(false);}};// If user is admin, fetch pending messages\nif(user.isAdmin){const fetchPendingMessages=async()=>{try{const{data}=await axios.get('/api/messages/pending');if(data.success){// Create a set of existing pending message IDs to avoid duplicates\nconst existingIds=new Set(pendingMessages.map(msg=>msg.id||msg._id));// Only add new messages that aren't already in the list\nconst newPendingMessages=data.messages.filter(msg=>!existingIds.has(msg.id||msg._id));setPendingMessages(prev=>[...prev,...newPendingMessages]);}}catch(error){console.error('Error fetching pending messages:',error);}};fetchPendingMessages();}fetchMessages();// Clean up socket connection on unmount\nreturn()=>{if(socketRef.current){socketRef.current.disconnect();}};},[user]);// Set up socket event listeners\nuseEffect(()=>{if(!socketRef.current||!user)return;// Receive approved messages\nsocketRef.current.on('approved_message',message=>{console.log('Received approved message:',message);setMessages(prevMessages=>{// Check if message already exists to avoid duplicates\nconst exists=prevMessages.some(msg=>msg.id===message.id||msg._id===message._id);if(exists)return prevMessages;return[...prevMessages,message];});// If this is one of the user's pending messages, remove it from pending\nif(message.sender.id===user.id||message.sender._id===user.id){setPendingMessages(prevPending=>prevPending.filter(msg=>msg.id!==message.id&&msg._id!==message._id));}// Remove from processing set if it was being processed\nsetProcessingIds(prev=>{const newSet=new Set(prev);newSet.delete(message.id);newSet.delete(message._id);return newSet;});});// Message was sent for approval\nsocketRef.current.on('message_sent_for_approval',messageId=>{console.log('Message sent for approval:',messageId);});// New pending message (admin only)\nif(user.isAdmin){socketRef.current.on('pending_approval',message=>{console.log('New pending message:',message);// Check if message already exists in pending list\nsetPendingMessages(prevPending=>{const exists=prevPending.some(msg=>msg.id===message.id||msg._id===message._id);if(exists)return prevPending;return[...prevPending,message];});});}// Message was rejected (admin only)\nsocketRef.current.on('message_rejected',messageId=>{setPendingMessages(prevPending=>prevPending.filter(msg=>msg.id!==messageId&&msg._id!==messageId));// Remove from processing set\nsetProcessingIds(prev=>{const newSet=new Set(prev);newSet.delete(messageId);return newSet;});});// Online users update\nsocketRef.current.on('online_users',users=>{setOnlineUsers(users);});// User disconnected\nsocketRef.current.on('user_disconnected',socketId=>{// This could be improved with more information from the server\nconsole.log('User disconnected:',socketId);});// Error handling\nsocketRef.current.on('message_error',error=>{console.error('Message error:',error);// Remove all processing IDs on error to allow retry\nsetProcessingIds(new Set());});return()=>{socketRef.current.off('approved_message');socketRef.current.off('message_sent_for_approval');socketRef.current.off('pending_approval');socketRef.current.off('message_rejected');socketRef.current.off('online_users');socketRef.current.off('user_disconnected');socketRef.current.off('message_error');};},[user,pendingMessages]);// Scroll to bottom when messages update\nuseEffect(()=>{scrollToBottom();},[messages]);// Send a new message\nconst sendMessage=e=>{e.preventDefault();if(!newMessage.trim()||!user)return;// Send message through socket\nsocketRef.current.emit('send_public_message',{sender:user.id,content:newMessage.trim()});// Add to pending messages for current user\nconst pendingMsg={id:Date.now().toString(),// Temporary ID\nsender:{id:user.id,username:user.username},content:newMessage.trim(),createdAt:new Date().toISOString(),isPending:true// Custom flag to identify as pending in UI\n};setPendingMessages(prev=>[...prev,pendingMsg]);// Clear input\nsetNewMessage('');};// Approve a message (admin only)\nconst approveMessage=messageId=>{if(!user.isAdmin||!socketRef.current)return;// Add to processing set to prevent duplicate approvals\nsetProcessingIds(prev=>{const newSet=new Set(prev);newSet.add(messageId);return newSet;});socketRef.current.emit('approve_message',messageId);};// Reject a message (admin only)\nconst rejectMessage=messageId=>{if(!user.isAdmin||!socketRef.current)return;// Add to processing set to prevent duplicate rejections\nsetProcessingIds(prev=>{const newSet=new Set(prev);newSet.add(messageId);return newSet;});socketRef.current.emit('reject_message',messageId);};// Navigate to private chat with user\nconst goToPrivateChat=userId=>{if(userId===user.id)return;// Don't chat with yourself\nnavigate(\"/private-chat/\".concat(userId));};if(!user){return/*#__PURE__*/_jsx(\"div\",{children:\"Please log in to view this page.\"});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsxs(ChatContainer,{children:[/*#__PURE__*/_jsxs(ChatSidebar,{children:[/*#__PURE__*/_jsxs(SidebarSection,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Online Users\"}),/*#__PURE__*/_jsx(OnlineUsersList,{children:onlineUsers.map(onlineUser=>/*#__PURE__*/_jsxs(OnlineUser,{onClick:()=>goToPrivateChat(onlineUser.id||onlineUser._id),isCurrentUser:onlineUser.id===user.id||onlineUser._id===user._id,children:[/*#__PURE__*/_jsx(\"span\",{children:onlineUser.username}),onlineUser.isAdmin&&/*#__PURE__*/_jsx(AdminBadge,{children:\"Admin\"}),onlineUser.id!==user.id&&onlineUser._id!==user._id&&/*#__PURE__*/_jsx(ChatButton,{title:\"Start private chat\",children:\"Chat\"})]},onlineUser.id||onlineUser._id))})]}),user.isAdmin&&pendingMessages.length>0&&/*#__PURE__*/_jsxs(SidebarSection,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Messages Awaiting Approval\"}),/*#__PURE__*/_jsx(PendingMessagesList,{children:pendingMessages.map(message=>{var _message$sender;const messageId=message.id||message._id;const isProcessing=processingIds.has(messageId);return/*#__PURE__*/_jsxs(PendingMessage,{children:[/*#__PURE__*/_jsxs(PendingMessageHeader,{children:[/*#__PURE__*/_jsx(\"span\",{children:((_message$sender=message.sender)===null||_message$sender===void 0?void 0:_message$sender.username)||message.senderUsername||'User'}),/*#__PURE__*/_jsx(PendingTime,{children:new Date(message.createdAt).toLocaleTimeString()})]}),/*#__PURE__*/_jsx(PendingMessageContent,{children:message.content}),/*#__PURE__*/_jsxs(PendingMessageActions,{children:[/*#__PURE__*/_jsx(ApproveButton,{onClick:()=>approveMessage(messageId),disabled:isProcessing,children:isProcessing?'Processing...':'Approve'}),/*#__PURE__*/_jsx(RejectButton,{onClick:()=>rejectMessage(messageId),disabled:isProcessing,children:isProcessing?'Processing...':'Reject'})]})]},messageId);})})]})]}),/*#__PURE__*/_jsxs(ChatMain,{children:[/*#__PURE__*/_jsxs(ChatHeader,{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Public Chatroom\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Messages will be displayed after admin approval.\"})]}),/*#__PURE__*/_jsxs(MessagesContainer,{children:[loading?/*#__PURE__*/_jsx(LoadingMessage,{children:\"Loading messages...\"}):messages.length===0?/*#__PURE__*/_jsx(EmptyMessage,{children:\"No messages have been sent yet.\"}):messages.map(message=>{const isOwnMessage=message.sender.id===user.id||message.sender._id===user.id;return/*#__PURE__*/_jsxs(MessageBubble,{isOwnMessage:isOwnMessage,children:[/*#__PURE__*/_jsxs(MessageHeader,{children:[/*#__PURE__*/_jsx(MessageSender,{onClick:()=>goToPrivateChat(message.sender.id||message.sender._id),isClickable:!isOwnMessage,children:message.sender.username||message.senderUsername}),/*#__PURE__*/_jsx(MessageTime,{children:new Date(message.createdAt).toLocaleTimeString()})]}),/*#__PURE__*/_jsx(MessageContent,{children:message.content})]},message.id||message._id);}),pendingMessages.filter(message=>message.sender.id===user.id||message.sender._id===user.id).map(message=>/*#__PURE__*/_jsxs(MessageBubble,{isOwnMessage:true,isPending:true,children:[/*#__PURE__*/_jsxs(MessageHeader,{children:[/*#__PURE__*/_jsx(MessageSender,{children:message.sender.username||message.senderUsername}),/*#__PURE__*/_jsx(MessageTime,{children:new Date(message.createdAt).toLocaleTimeString()})]}),/*#__PURE__*/_jsx(MessageContent,{children:message.content}),/*#__PURE__*/_jsx(PendingIndicator,{children:\"Awaiting Approval\"})]},message.id||message._id)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(MessageForm,{onSubmit:sendMessage,children:[/*#__PURE__*/_jsx(MessageInput,{type:\"text\",value:newMessage,onChange:e=>setNewMessage(e.target.value),placeholder:\"Type your message...\",autoFocus:true}),/*#__PURE__*/_jsx(SendButton,{type:\"submit\",disabled:!newMessage.trim(),children:\"Send\"})]})]})]})]});};const ChatContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  height: calc(100vh - 60px);\\n  max-width: 1400px;\\n  margin: 0 auto;\\n  background-color: var(--bg-primary);\\n\"])));const ChatSidebar=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  width: 300px;\\n  background-color: var(--bg-secondary);\\n  border-left: 1px solid var(--border-color);\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n\"])));const SidebarSection=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  padding: 1.5rem;\\n  border-bottom: 1px solid var(--border-color);\\n  \\n  h3 {\\n    margin-bottom: 1rem;\\n    font-size: 1rem;\\n    color: var(--text-primary);\\n  }\\n\"])));const OnlineUsersList=styled.ul(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  list-style: none;\\n  padding: 0;\\n\"])));const OnlineUser=styled.li(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  padding: 0.5rem;\\n  margin-bottom: 0.5rem;\\n  background-color: var(--bg-tertiary);\\n  border-radius: 4px;\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  color: var(--text-secondary);\\n  cursor: \",\";\\n  \\n  &:hover {\\n    background-color: \",\";\\n  }\\n\"])),props=>props.isCurrentUser?'default':'pointer',props=>props.isCurrentUser?'var(--bg-tertiary)':'var(--bg-primary)');const ChatButton=styled.button(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  background-color: var(--accent-color);\\n  color: var(--text-primary);\\n  border: none;\\n  border-radius: 4px;\\n  padding: 0.2rem 0.4rem;\\n  font-size: 0.7rem;\\n  cursor: pointer;\\n  \\n  &:hover {\\n    background-color: var(--accent-hover);\\n  }\\n\"])));const AdminBadge=styled.span(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  background-color: var(--danger-color);\\n  color: var(--text-primary);\\n  font-size: 0.7rem;\\n  padding: 0.2rem 0.4rem;\\n  border-radius: 3px;\\n\"])));const PendingMessagesList=styled.div(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  max-height: 400px;\\n  overflow-y: auto;\\n\"])));const PendingMessage=styled.div(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background-color: var(--bg-tertiary);\\n  border: 1px solid var(--border-color);\\n  border-radius: 4px;\\n  padding: 1rem;\\n\"])));const PendingMessageHeader=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 0.5rem;\\n  \\n  span {\\n    font-weight: 500;\\n    color: var(--text-primary);\\n  }\\n\"])));const PendingTime=styled.span(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  font-size: 0.8rem;\\n  color: var(--text-secondary);\\n\"])));const PendingMessageContent=styled.p(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  margin-bottom: 1rem;\\n  color: var(--text-secondary);\\n\"])));const PendingMessageActions=styled.div(_templateObject11||(_templateObject11=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  gap: 0.5rem;\\n\"])));const ApproveButton=styled.button(_templateObject12||(_templateObject12=_taggedTemplateLiteral([\"\\n  background-color: var(--success-color);\\n  color: var(--text-primary);\\n  border: none;\\n  border-radius: 4px;\\n  padding: 0.5rem 0.8rem;\\n  font-size: 0.8rem;\\n  cursor: pointer;\\n  \\n  &:hover:not(:disabled) {\\n    background-color: #27ae60;\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.7;\\n    cursor: not-allowed;\\n  }\\n\"])));const RejectButton=styled.button(_templateObject13||(_templateObject13=_taggedTemplateLiteral([\"\\n  background-color: var(--danger-color);\\n  color: var(--text-primary);\\n  border: none;\\n  border-radius: 4px;\\n  padding: 0.5rem 0.8rem;\\n  font-size: 0.8rem;\\n  cursor: pointer;\\n  \\n  &:hover:not(:disabled) {\\n    background-color: #c0392b;\\n  }\\n  \\n  &:disabled {\\n    opacity: 0.7;\\n    cursor: not-allowed;\\n  }\\n\"])));const ChatMain=styled.div(_templateObject14||(_templateObject14=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n\"])));const ChatHeader=styled.div(_templateObject15||(_templateObject15=_taggedTemplateLiteral([\"\\n  padding: 1.5rem;\\n  background-color: var(--bg-secondary);\\n  border-bottom: 1px solid var(--border-color);\\n  text-align: center;\\n  \\n  h2 {\\n    margin-bottom: 0.5rem;\\n    color: var(--text-primary);\\n  }\\n  \\n  p {\\n    color: var(--text-secondary);\\n    font-size: 0.9rem;\\n  }\\n\"])));const MessagesContainer=styled.div(_templateObject16||(_templateObject16=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 1.5rem;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1rem;\\n  background-color: var(--bg-primary);\\n\"])));const LoadingMessage=styled.div(_templateObject17||(_templateObject17=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  color: var(--text-secondary);\\n  margin: 2rem 0;\\n\"])));const EmptyMessage=styled.div(_templateObject18||(_templateObject18=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  color: var(--text-secondary);\\n  margin: 2rem 0;\\n\"])));const MessageBubble=styled.div(_templateObject19||(_templateObject19=_taggedTemplateLiteral([\"\\n  max-width: 70%;\\n  padding: 1rem;\\n  border-radius: 8px;\\n  background-color: \",\";\\n  color: \",\";\\n  align-self: \",\";\\n  box-shadow: 0 1px 2px var(--shadow-color);\\n  opacity: \",\";\\n  position: relative;\\n\"])),props=>props.isOwnMessage?'var(--accent-color)':'var(--bg-secondary)',props=>props.isOwnMessage?'var(--text-primary)':'var(--text-primary)',props=>props.isOwnMessage?'flex-end':'flex-start',props=>props.isPending?0.7:1);const MessageHeader=styled.div(_templateObject20||(_templateObject20=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  margin-bottom: 0.5rem;\\n\"])));const MessageSender=styled.span(_templateObject21||(_templateObject21=_taggedTemplateLiteral([\"\\n  font-weight: 500;\\n  cursor: \",\";\\n  \\n  &:hover {\\n    text-decoration: \",\";\\n    color: \",\";\\n  }\\n\"])),props=>props.isClickable?'pointer':'default',props=>props.isClickable?'underline':'none',props=>props.isClickable?'var(--accent-color)':'inherit');const MessageTime=styled.span(_templateObject22||(_templateObject22=_taggedTemplateLiteral([\"\\n  font-size: 0.8rem;\\n  opacity: 0.8;\\n\"])));const MessageContent=styled.p(_templateObject23||(_templateObject23=_taggedTemplateLiteral([\"\\n  word-break: break-word;\\n\"])));const PendingIndicator=styled.div(_templateObject24||(_templateObject24=_taggedTemplateLiteral([\"\\n  font-size: 0.7rem;\\n  color: var(--text-secondary);\\n  margin-top: 0.5rem;\\n  text-align: right;\\n  font-style: italic;\\n\"])));const MessageForm=styled.form(_templateObject25||(_templateObject25=_taggedTemplateLiteral([\"\\n  display: flex;\\n  padding: 1rem;\\n  background-color: var(--bg-secondary);\\n  border-top: 1px solid var(--border-color);\\n\"])));const MessageInput=styled.input(_templateObject26||(_templateObject26=_taggedTemplateLiteral([\"\\n  flex: 1;\\n  padding: 0.75rem;\\n  border: 1px solid var(--border-color);\\n  border-radius: 4px 0 0 4px;\\n  font-size: 1rem;\\n  background-color: var(--bg-tertiary);\\n  color: var(--text-primary);\\n  \\n  &:focus {\\n    outline: none;\\n    border-color: var(--accent-color);\\n  }\\n\"])));const SendButton=styled.button(_templateObject27||(_templateObject27=_taggedTemplateLiteral([\"\\n  background-color: var(--accent-color);\\n  color: var(--text-primary);\\n  border: none;\\n  border-radius: 0 4px 4px 0;\\n  padding: 0 1.5rem;\\n  font-size: 1rem;\\n  cursor: pointer;\\n  \\n  &:hover {\\n    background-color: var(--accent-hover);\\n  }\\n  \\n  &:disabled {\\n    background-color: #555;\\n    opacity: 0.7;\\n    cursor: not-allowed;\\n  }\\n\"])));export default Chat;","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","styled","axios","io","useAuth","Navigation","SOCKET_URL","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","user","navigate","messages","setMessages","newMessage","setNewMessage","pendingMessages","setPendingMessages","onlineUsers","setOnlineUsers","loading","setLoading","processingIds","setProcessingIds","Set","socketRef","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","emit","id","fetchMessages","data","get","success","error","console","isAdmin","fetchPendingMessages","existingIds","map","msg","_id","newPendingMessages","filter","has","prev","disconnect","on","message","log","prevMessages","exists","some","sender","prevPending","newSet","delete","messageId","users","socketId","off","sendMessage","e","preventDefault","trim","content","pendingMsg","Date","now","toString","username","createdAt","toISOString","isPending","approveMessage","add","rejectMessage","goToPrivateChat","userId","concat","children","ChatContainer","ChatSidebar","SidebarSection","OnlineUsersList","onlineUser","OnlineUser","onClick","isCurrentUser","AdminBadge","ChatButton","title","length","PendingMessagesList","_message$sender","isProcessing","PendingMessage","PendingMessageHeader","senderUsername","PendingTime","toLocaleTimeString","PendingMessageContent","PendingMessageActions","ApproveButton","disabled","RejectButton","ChatMain","ChatHeader","MessagesContainer","LoadingMessage","EmptyMessage","isOwnMessage","MessageBubble","MessageHeader","MessageSender","isClickable","MessageTime","MessageContent","PendingIndicator","ref","MessageForm","onSubmit","MessageInput","type","value","onChange","target","placeholder","autoFocus","SendButton","div","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","ul","_templateObject4","li","_templateObject5","props","button","_templateObject6","span","_templateObject7","_templateObject8","_templateObject9","_templateObject0","_templateObject1","p","_templateObject10","_templateObject11","_templateObject12","_templateObject13","_templateObject14","_templateObject15","_templateObject16","_templateObject17","_templateObject18","_templateObject19","_templateObject20","_templateObject21","_templateObject22","_templateObject23","_templateObject24","form","_templateObject25","input","_templateObject26","_templateObject27"],"sources":["/home/orv/Documents/Projects/offline-chat/client/src/pages/Chat.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { useAuth } from '../context/AuthContext';\nimport Navigation from '../components/Navigation';\nimport { SOCKET_URL } from '../config';\n\nconst Chat = () => {\n  const { user } = useAuth();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [pendingMessages, setPendingMessages] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [processingIds, setProcessingIds] = useState(new Set()); // Track messages being processed\n  \n  const socketRef = useRef();\n  const messagesEndRef = useRef(null);\n  \n  // Scroll to the bottom of messages\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n  \n  // Initialize socket connection\n  useEffect(() => {\n    if (!user) return;\n    \n    // Get the server URL from the proxy or use localhost\n    socketRef.current = io(SOCKET_URL);\n    \n    // Connect user\n    socketRef.current.emit('user_connected', user.id);\n    \n    // Fetch existing messages\n    const fetchMessages = async () => {\n      try {\n        const { data } = await axios.get('/api/messages');\n        if (data.success) {\n          setMessages(data.messages);\n        }\n      } catch (error) {\n        console.error('Error fetching messages:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    \n    // If user is admin, fetch pending messages\n    if (user.isAdmin) {\n      const fetchPendingMessages = async () => {\n        try {\n          const { data } = await axios.get('/api/messages/pending');\n          if (data.success) {\n            // Create a set of existing pending message IDs to avoid duplicates\n            const existingIds = new Set(pendingMessages.map(msg => msg.id || msg._id));\n            // Only add new messages that aren't already in the list\n            const newPendingMessages = data.messages.filter(\n              msg => !existingIds.has(msg.id || msg._id)\n            );\n            setPendingMessages(prev => [...prev, ...newPendingMessages]);\n          }\n        } catch (error) {\n          console.error('Error fetching pending messages:', error);\n        }\n      };\n      \n      fetchPendingMessages();\n    }\n    \n    fetchMessages();\n    \n    // Clean up socket connection on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [user]);\n  \n  // Set up socket event listeners\n  useEffect(() => {\n    if (!socketRef.current || !user) return;\n    \n    // Receive approved messages\n    socketRef.current.on('approved_message', (message) => {\n      console.log('Received approved message:', message);\n      setMessages((prevMessages) => {\n        // Check if message already exists to avoid duplicates\n        const exists = prevMessages.some(\n          msg => (msg.id === message.id) || (msg._id === message._id)\n        );\n        if (exists) return prevMessages;\n        return [...prevMessages, message];\n      });\n      \n      // If this is one of the user's pending messages, remove it from pending\n      if (message.sender.id === user.id || message.sender._id === user.id) {\n        setPendingMessages((prevPending) => \n          prevPending.filter((msg) => msg.id !== message.id && msg._id !== message._id)\n        );\n      }\n      \n      // Remove from processing set if it was being processed\n      setProcessingIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(message.id);\n        newSet.delete(message._id);\n        return newSet;\n      });\n    });\n    \n    // Message was sent for approval\n    socketRef.current.on('message_sent_for_approval', (messageId) => {\n      console.log('Message sent for approval:', messageId);\n    });\n    \n    // New pending message (admin only)\n    if (user.isAdmin) {\n      socketRef.current.on('pending_approval', (message) => {\n        console.log('New pending message:', message);\n        // Check if message already exists in pending list\n        setPendingMessages((prevPending) => {\n          const exists = prevPending.some(\n            msg => (msg.id === message.id) || (msg._id === message._id)\n          );\n          if (exists) return prevPending;\n          return [...prevPending, message];\n        });\n      });\n    }\n    \n    // Message was rejected (admin only)\n    socketRef.current.on('message_rejected', (messageId) => {\n      setPendingMessages((prevPending) => \n        prevPending.filter((msg) => msg.id !== messageId && msg._id !== messageId)\n      );\n      \n      // Remove from processing set\n      setProcessingIds(prev => {\n        const newSet = new Set(prev);\n        newSet.delete(messageId);\n        return newSet;\n      });\n    });\n    \n    // Online users update\n    socketRef.current.on('online_users', (users) => {\n      setOnlineUsers(users);\n    });\n    \n    // User disconnected\n    socketRef.current.on('user_disconnected', (socketId) => {\n      // This could be improved with more information from the server\n      console.log('User disconnected:', socketId);\n    });\n    \n    // Error handling\n    socketRef.current.on('message_error', (error) => {\n      console.error('Message error:', error);\n      // Remove all processing IDs on error to allow retry\n      setProcessingIds(new Set());\n    });\n    \n    return () => {\n      socketRef.current.off('approved_message');\n      socketRef.current.off('message_sent_for_approval');\n      socketRef.current.off('pending_approval');\n      socketRef.current.off('message_rejected');\n      socketRef.current.off('online_users');\n      socketRef.current.off('user_disconnected');\n      socketRef.current.off('message_error');\n    };\n  }, [user, pendingMessages]);\n  \n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  \n  // Send a new message\n  const sendMessage = (e) => {\n    e.preventDefault();\n    \n    if (!newMessage.trim() || !user) return;\n    \n    // Send message through socket\n    socketRef.current.emit('send_public_message', {\n      sender: user.id,\n      content: newMessage.trim(),\n    });\n    \n    // Add to pending messages for current user\n    const pendingMsg = {\n      id: Date.now().toString(), // Temporary ID\n      sender: {\n        id: user.id,\n        username: user.username,\n      },\n      content: newMessage.trim(),\n      createdAt: new Date().toISOString(),\n      isPending: true, // Custom flag to identify as pending in UI\n    };\n    \n    setPendingMessages((prev) => [...prev, pendingMsg]);\n    \n    // Clear input\n    setNewMessage('');\n  };\n  \n  // Approve a message (admin only)\n  const approveMessage = (messageId) => {\n    if (!user.isAdmin || !socketRef.current) return;\n    \n    // Add to processing set to prevent duplicate approvals\n    setProcessingIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(messageId);\n      return newSet;\n    });\n    \n    socketRef.current.emit('approve_message', messageId);\n  };\n  \n  // Reject a message (admin only)\n  const rejectMessage = (messageId) => {\n    if (!user.isAdmin || !socketRef.current) return;\n    \n    // Add to processing set to prevent duplicate rejections\n    setProcessingIds(prev => {\n      const newSet = new Set(prev);\n      newSet.add(messageId);\n      return newSet;\n    });\n    \n    socketRef.current.emit('reject_message', messageId);\n  };\n  \n  // Navigate to private chat with user\n  const goToPrivateChat = (userId) => {\n    if (userId === user.id) return; // Don't chat with yourself\n    navigate(`/private-chat/${userId}`);\n  };\n  \n  if (!user) {\n    return <div>Please log in to view this page.</div>;\n  }\n  \n  return (\n    <>\n      <Navigation />\n      <ChatContainer>\n        <ChatSidebar>\n          <SidebarSection>\n            <h3>Online Users</h3>\n            <OnlineUsersList>\n              {onlineUsers.map((onlineUser) => (\n                <OnlineUser \n                  key={onlineUser.id || onlineUser._id}\n                  onClick={() => goToPrivateChat(onlineUser.id || onlineUser._id)}\n                  isCurrentUser={(onlineUser.id === user.id) || (onlineUser._id === user._id)}\n                >\n                  <span>{onlineUser.username}</span>\n                  {onlineUser.isAdmin && <AdminBadge>Admin</AdminBadge>}\n                  {(onlineUser.id !== user.id) && (onlineUser._id !== user._id) && (\n                    <ChatButton title=\"Start private chat\">Chat</ChatButton>\n                  )}\n                </OnlineUser>\n              ))}\n            </OnlineUsersList>\n          </SidebarSection>\n          \n          {user.isAdmin && pendingMessages.length > 0 && (\n            <SidebarSection>\n              <h3>Messages Awaiting Approval</h3>\n              <PendingMessagesList>\n                {pendingMessages.map((message) => {\n                  const messageId = message.id || message._id;\n                  const isProcessing = processingIds.has(messageId);\n                  \n                  return (\n                    <PendingMessage key={messageId}>\n                      <PendingMessageHeader>\n                        <span>{message.sender?.username || message.senderUsername || 'User'}</span>\n                        <PendingTime>\n                          {new Date(message.createdAt).toLocaleTimeString()}\n                        </PendingTime>\n                      </PendingMessageHeader>\n                      <PendingMessageContent>{message.content}</PendingMessageContent>\n                      <PendingMessageActions>\n                        <ApproveButton \n                          onClick={() => approveMessage(messageId)}\n                          disabled={isProcessing}\n                        >\n                          {isProcessing ? 'Processing...' : 'Approve'}\n                        </ApproveButton>\n                        <RejectButton \n                          onClick={() => rejectMessage(messageId)}\n                          disabled={isProcessing}\n                        >\n                          {isProcessing ? 'Processing...' : 'Reject'}\n                        </RejectButton>\n                      </PendingMessageActions>\n                    </PendingMessage>\n                  );\n                })}\n              </PendingMessagesList>\n            </SidebarSection>\n          )}\n        </ChatSidebar>\n        \n        <ChatMain>\n          <ChatHeader>\n            <h2>Public Chatroom</h2>\n            <p>Messages will be displayed after admin approval.</p>\n          </ChatHeader>\n          \n          <MessagesContainer>\n            {loading ? (\n              <LoadingMessage>Loading messages...</LoadingMessage>\n            ) : messages.length === 0 ? (\n              <EmptyMessage>No messages have been sent yet.</EmptyMessage>\n            ) : (\n              messages.map((message) => {\n                const isOwnMessage = (message.sender.id === user.id) || (message.sender._id === user.id);\n                return (\n                  <MessageBubble\n                    key={message.id || message._id}\n                    isOwnMessage={isOwnMessage}\n                  >\n                    <MessageHeader>\n                      <MessageSender \n                        onClick={() => goToPrivateChat(message.sender.id || message.sender._id)}\n                        isClickable={!isOwnMessage}\n                      >\n                        {message.sender.username || message.senderUsername}\n                      </MessageSender>\n                      <MessageTime>\n                        {new Date(message.createdAt).toLocaleTimeString()}\n                      </MessageTime>\n                    </MessageHeader>\n                    <MessageContent>{message.content}</MessageContent>\n                  </MessageBubble>\n                );\n              })\n            )}\n            \n            {/* Show user's pending messages */}\n            {pendingMessages\n              .filter((message) => (message.sender.id === user.id) || (message.sender._id === user.id))\n              .map((message) => (\n                <MessageBubble key={message.id || message._id} isOwnMessage isPending>\n                  <MessageHeader>\n                    <MessageSender>{message.sender.username || message.senderUsername}</MessageSender>\n                    <MessageTime>\n                      {new Date(message.createdAt).toLocaleTimeString()}\n                    </MessageTime>\n                  </MessageHeader>\n                  <MessageContent>{message.content}</MessageContent>\n                  <PendingIndicator>Awaiting Approval</PendingIndicator>\n                </MessageBubble>\n              ))}\n            \n            <div ref={messagesEndRef} />\n          </MessagesContainer>\n          \n          <MessageForm onSubmit={sendMessage}>\n            <MessageInput\n              type=\"text\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              placeholder=\"Type your message...\"\n              autoFocus\n            />\n            <SendButton type=\"submit\" disabled={!newMessage.trim()}>Send</SendButton>\n          </MessageForm>\n        </ChatMain>\n      </ChatContainer>\n    </>\n  );\n};\n\nconst ChatContainer = styled.div`\n  display: flex;\n  height: calc(100vh - 60px);\n  max-width: 1400px;\n  margin: 0 auto;\n  background-color: var(--bg-primary);\n`;\n\nconst ChatSidebar = styled.div`\n  width: 300px;\n  background-color: var(--bg-secondary);\n  border-left: 1px solid var(--border-color);\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst SidebarSection = styled.div`\n  padding: 1.5rem;\n  border-bottom: 1px solid var(--border-color);\n  \n  h3 {\n    margin-bottom: 1rem;\n    font-size: 1rem;\n    color: var(--text-primary);\n  }\n`;\n\nconst OnlineUsersList = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst OnlineUser = styled.li`\n  padding: 0.5rem;\n  margin-bottom: 0.5rem;\n  background-color: var(--bg-tertiary);\n  border-radius: 4px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: var(--text-secondary);\n  cursor: ${props => props.isCurrentUser ? 'default' : 'pointer'};\n  \n  &:hover {\n    background-color: ${props => props.isCurrentUser ? 'var(--bg-tertiary)' : 'var(--bg-primary)'};\n  }\n`;\n\nconst ChatButton = styled.button`\n  background-color: var(--accent-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.2rem 0.4rem;\n  font-size: 0.7rem;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--accent-hover);\n  }\n`;\n\nconst AdminBadge = styled.span`\n  background-color: var(--danger-color);\n  color: var(--text-primary);\n  font-size: 0.7rem;\n  padding: 0.2rem 0.4rem;\n  border-radius: 3px;\n`;\n\nconst PendingMessagesList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n\nconst PendingMessage = styled.div`\n  background-color: var(--bg-tertiary);\n  border: 1px solid var(--border-color);\n  border-radius: 4px;\n  padding: 1rem;\n`;\n\nconst PendingMessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n  \n  span {\n    font-weight: 500;\n    color: var(--text-primary);\n  }\n`;\n\nconst PendingTime = styled.span`\n  font-size: 0.8rem;\n  color: var(--text-secondary);\n`;\n\nconst PendingMessageContent = styled.p`\n  margin-bottom: 1rem;\n  color: var(--text-secondary);\n`;\n\nconst PendingMessageActions = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  gap: 0.5rem;\n`;\n\nconst ApproveButton = styled.button`\n  background-color: var(--success-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: #27ae60;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst RejectButton = styled.button`\n  background-color: var(--danger-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 4px;\n  padding: 0.5rem 0.8rem;\n  font-size: 0.8rem;\n  cursor: pointer;\n  \n  &:hover:not(:disabled) {\n    background-color: #c0392b;\n  }\n  \n  &:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nconst ChatMain = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ChatHeader = styled.div`\n  padding: 1.5rem;\n  background-color: var(--bg-secondary);\n  border-bottom: 1px solid var(--border-color);\n  text-align: center;\n  \n  h2 {\n    margin-bottom: 0.5rem;\n    color: var(--text-primary);\n  }\n  \n  p {\n    color: var(--text-secondary);\n    font-size: 0.9rem;\n  }\n`;\n\nconst MessagesContainer = styled.div`\n  flex: 1;\n  padding: 1.5rem;\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  background-color: var(--bg-primary);\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n\nconst EmptyMessage = styled.div`\n  text-align: center;\n  color: var(--text-secondary);\n  margin: 2rem 0;\n`;\n\nconst MessageBubble = styled.div`\n  max-width: 70%;\n  padding: 1rem;\n  border-radius: 8px;\n  background-color: ${(props) => (props.isOwnMessage ? 'var(--accent-color)' : 'var(--bg-secondary)')};\n  color: ${(props) => (props.isOwnMessage ? 'var(--text-primary)' : 'var(--text-primary)')};\n  align-self: ${(props) => (props.isOwnMessage ? 'flex-end' : 'flex-start')};\n  box-shadow: 0 1px 2px var(--shadow-color);\n  opacity: ${(props) => (props.isPending ? 0.7 : 1)};\n  position: relative;\n`;\n\nconst MessageHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 0.5rem;\n`;\n\nconst MessageSender = styled.span`\n  font-weight: 500;\n  cursor: ${props => props.isClickable ? 'pointer' : 'default'};\n  \n  &:hover {\n    text-decoration: ${props => props.isClickable ? 'underline' : 'none'};\n    color: ${props => props.isClickable ? 'var(--accent-color)' : 'inherit'};\n  }\n`;\n\nconst MessageTime = styled.span`\n  font-size: 0.8rem;\n  opacity: 0.8;\n`;\n\nconst MessageContent = styled.p`\n  word-break: break-word;\n`;\n\nconst PendingIndicator = styled.div`\n  font-size: 0.7rem;\n  color: var(--text-secondary);\n  margin-top: 0.5rem;\n  text-align: right;\n  font-style: italic;\n`;\n\nconst MessageForm = styled.form`\n  display: flex;\n  padding: 1rem;\n  background-color: var(--bg-secondary);\n  border-top: 1px solid var(--border-color);\n`;\n\nconst MessageInput = styled.input`\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid var(--border-color);\n  border-radius: 4px 0 0 4px;\n  font-size: 1rem;\n  background-color: var(--bg-tertiary);\n  color: var(--text-primary);\n  \n  &:focus {\n    outline: none;\n    border-color: var(--accent-color);\n  }\n`;\n\nconst SendButton = styled.button`\n  background-color: var(--accent-color);\n  color: var(--text-primary);\n  border: none;\n  border-radius: 0 4px 4px 0;\n  padding: 0 1.5rem;\n  font-size: 1rem;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: var(--accent-hover);\n  }\n  \n  &:disabled {\n    background-color: #555;\n    opacity: 0.7;\n    cursor: not-allowed;\n  }\n`;\n\nexport default Chat; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}